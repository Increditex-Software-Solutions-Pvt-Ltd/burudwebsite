<!DOCTYPE html>
<html lang="en">

<head>
  <!-- Required Meta Tags Always Come First -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

  <!-- Title -->
  <title>Register | cloudkitchen</title>
  <!-- Favicon -->
  <link rel="shortcut icon" href="favicon.ico">

  <!-- Font -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&amp;display=swap" rel="stylesheet">

  <!-- CSS Implementing Plugins -->
  <link rel="stylesheet" href="admin/css/vendor.min.css">

  <!-- CSS Front Template -->
  <link rel="stylesheet" href="admin/css/theme.minc619.css?v=1.0">

  <link rel="preload" href="admin/css/theme.min.css" data-hs-appearance="default" as="style">
  <link rel="preload" href="admin/css/theme-dark.min.css" data-hs-appearance="dark" as="style">

  <style data-hs-appearance-onload-styles>
    * {
      transition: unset !important;
    }

    body {
      opacity: 0;
    }
  </style>

  <script>
    window.hs_config = { "autopath": "@@autopath", "deleteLine": "hs-builder:delete", "deleteLine:build": "hs-builder:build-delete", "deleteLine:dist": "hs-builder:dist-delete", "previewMode": false, "startPath": "/", "vars": { "themeFont": "https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap", "version": "?v=1.0" }, "layoutBuilder": { "extend": { "switcherSupport": true }, "header": { "layoutMode": "default", "containerMode": "container-fluid" }, "sidebarLayout": "default" }, "themeAppearance": { "layoutSkin": "default", "sidebarSkin": "default", "styles": { "colors": { "primary": "#377dff", "transparent": "transparent", "white": "#fff", "dark": "132144", "gray": { "100": "#f9fafc", "900": "#1e2022" } }, "font": "Inter" } }, "languageDirection": { "lang": "en" }, "skipFilesFromBundle": { "dist": ["/js/hs.theme-appearance.js", "/js/hs.theme-appearance-charts.js", "/js/demo.js"], "build": ["/css/theme.css", "/vendor/hs-navbar-vertical-aside/dist/hs-navbar-vertical-aside-mini-cache.js", "/js/demo.js", "/css/", "/css/docs.css", "/vendor/icon-set/", "/js/hs.theme-appearance.js", "/js/hs.theme-appearance-charts.js", "node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.", "/js/demo.js"] }, "minifyCSSFiles": ["/css/theme.css", "/css/theme-dark.css"], "copyDependencies": { "dist": { "*/js/theme-custom.js": "" }, "build": { "*/js/theme-custom.js": "", "node_modules/bootstrap-icons/font/*fonts/**": "/css" } }, "buildFolder": "", "replacePathsToCDN": {}, "directoryNames": { "src": "./src", "dist": "./dist", "build": "./build" }, "fileNames": { "dist": { "js": "theme.min.js", "css": "theme.min.css" }, "build": { "css": "theme.min.css", "js": "theme.min.js", "vendorCSS": "vendor.min.css", "vendorJS": "vendor.min.js" } }, "fileTypes": "jpg|png|svg|mp4|webm|ogv|json" }
    window.hs_config.gulpRGBA = (p1) => {
      const options = p1.split(',')
      const hex = options[0].toString()
      const transparent = options[1].toString()

      var c;
      if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
        c = hex.substring(1).split('');
        if (c.length == 3) {
          c = [c[0], c[0], c[1], c[1], c[2], c[2]];
        }
        c = '0x' + c.join('');
        return 'rgba(' + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',') + ',' + transparent + ')';
      }
      throw new Error('Bad Hex');
    }
    window.hs_config.gulpDarken = (p1) => {
      const options = p1.split(',')

      let col = options[0].toString()
      let amt = -parseInt(options[1])
      var usePound = false

      if (col[0] == "#") {
        col = col.slice(1)
        usePound = true
      }
      var num = parseInt(col, 16)
      var r = (num >> 16) + amt
      if (r > 255) {
        r = 255
      } else if (r < 0) {
        r = 0
      }
      var b = ((num >> 8) & 0x00FF) + amt
      if (b > 255) {
        b = 255
      } else if (b < 0) {
        b = 0
      }
      var g = (num & 0x0000FF) + amt
      if (g > 255) {
        g = 255
      } else if (g < 0) {
        g = 0
      }
      return (usePound ? "#" : "") + (g | (b << 8) | (r << 16)).toString(16)
    }
    window.hs_config.gulpLighten = (p1) => {
      const options = p1.split(',')

      let col = options[0].toString()
      let amt = parseInt(options[1])
      var usePound = false

      if (col[0] == "#") {
        col = col.slice(1)
        usePound = true
      }
      var num = parseInt(col, 16)
      var r = (num >> 16) + amt
      if (r > 255) {
        r = 255
      } else if (r < 0) {
        r = 0
      }
      var b = ((num >> 8) & 0x00FF) + amt
      if (b > 255) {
        b = 255
      } else if (b < 0) {
        b = 0
      }
      var g = (num & 0x0000FF) + amt
      if (g > 255) {
        g = 255
      } else if (g < 0) {
        g = 0
      }
      return (usePound ? "#" : "") + (g | (b << 8) | (r << 16)).toString(16)
    }
  </script>
</head>

<body>

  <script src="admin/js/hs.theme-appearance.js"></script>

 
  <main id="content" role="main" class="main bg-light">
   <!-- Assuming your messages are stored in a variable named 'messages' -->
<div class="p-1 mt-5 position-absolute top-0 end-0">
  <% if (messages.error && messages.error.length > 0) { %>
      <% messages.error.forEach((item, index) => { %>
          <div class="toast fade text-bg-danger show" id="alert-<%= index %>" role="alert">
              <div class="toast-header py-1">
                  <strong class="me-auto"></strong>
                  <button class="btn-close btn-sm" data-bs-dismiss="toast"></button>
              </div>
              <div class="toast-body"><%- item %></div>
          </div>
      <% }); %>
  <% } %>

  <% if (messages.success && messages.success.length > 0) { %>
      <% messages.success.forEach((item, index) => { %>
          <div class="toast fade text-bg-success show" id="alert-<%= index %>" role="alert">
              <div class="toast-header py-1">
                  <strong class="me-auto"></strong>
                  <button class="btn-close btn-sm" data-bs-dismiss="toast"></button>
              </div>
              <div class="toast-body"><%- item %></div>
          </div>
      <% }); %>
  <% } %>
</div>

  
    <div class="container py-5 py-sm-7">
      <div class="mx-auto" style="max-width: 30rem;">
       
        <a class="d-flex justify-content-center mb-3" href="./">
					<h1 style="font-family:fantasy;"><span class="display-4" style="text-decoration:underline;color: #ffc107;">BURUD</span>
						<span style="color: #dc3545;" class="display-4">BANDHAN</span>
					</h1>
				</a>
        <div class="card card-lg mb-5">
          <div class="card-body">
            
            <form class="js-validate needs-validation" novalidate id="register-form" action="/admin/register-admin"  method="post">
              <div class="text-center">
                <div class="mb-5">
                  <h1 class="display-5">Create your account</h1>
                  <p>Already have an account? <a class="link" href="login">Login here</a></p>
                </div>
              </div>
            
              <div class="row">
                <div class="col-sm-12">
                  <div class="mb-4">
                    <label class="form-label" for="signupSrFname">Name</label>
                    <input type="text" class="form-control form-control-lg" name="name" id="signupSrFname"
                      placeholder="Name" required>
                    <label id="signupSrFname-error" class="error invalid-feedback" for="signupSrFname"></label>
                  </div>
               
                </div>

              
              </div>
         
              <div class="mb-4">
                <label class="form-label" for="signupSrEmail">Your email</label>
                <input type="email" class="form-control form-control-lg" name="email" id="signupSrEmail"
                  placeholder="user@example.com" aria-label="user@example.com" required>
                <label id="signupSrEmail-error" class="error invalid-feedback" for="signupSrEmail"></label>
              </div>
              <!-- End Form -->

              <!-- Form -->
              <div class="mb-4">
                <label class="form-label" for="signupSrPassword">Password</label>

                <div class="input-group input-group-merge" data-hs-validation-validate-class>
                  <input type="password" class="js-toggle-password form-control form-control-lg" name="password"
                    id="signupSrPassword" placeholder="8+ characters required" aria-label="8+ characters required"
                    required minlength="8" data-hs-toggle-password-options='{
                           "target": [".js-toggle-password-target-1", ".js-toggle-password-target-2"],
                           "defaultClass": "bi-eye-slash",
                           "showClass": "bi-eye",
                           "classChangeTarget": ".js-toggle-password-show-icon-1"
                         }'>
                  <a class="js-toggle-password-target-1 input-group-append input-group-text" href="javascript:;">
                    <i class="js-toggle-password-show-icon-1 bi-eye"></i>
                  </a>
                </div>
                <label id="signupSrPassword-error" class="error invalid-feedback" for="signupSrPassword"></label>
              </div>
              <!-- End Form -->

              <!-- Form -->
       
              <!-- End Form -->

              <!-- Form Check -->
              
              <!-- End Form Check -->

              <div class="d-grid gap-2">
                <button type="submit" name="register" class="btn btn-dark btn-lg">Create an account</button>
              </div>
            </form>
            <!-- End Form -->
          </div>
        </div>
        <!-- End Card -->
      </div>
    </div>
    <!-- End Content -->
  </main>
  <!-- ========== END MAIN CONTENT ========== -->

  <!-- JS Implementing Plugins -->
  <script src="admin/js/vendor.min.js"></script>
  <script src="admin/js/jquery.validate.min.js"></script>
  <script src="admin/js/additional-methods.min.js"></script>

  <!-- JS Front -->
  <script src="admin/js/theme.min.js"></script>
  <script src="admin/js/main.js"></script>

  <!-- JS Plugins Init. -->
  <script>
    (function () {
      window.onload = function () {
        // INITIALIZATION OF BOOTSTRAP VALIDATION
        // =======================================================
        // HSBsValidation.init('.js-validate');
        // INITIALIZATION OF TOGGLE PASSWORD
        // =======================================================
        new HSTogglePassword('.js-toggle-password');
        $('#register-form').validate({
          rules: {
          
            name: {
              required: true,
            },
           
            email: {
              required: true,
              email: true,
            },
            password: {
              required: true,
            }
          },
          messages: {
         
            name: {
              required: 'Please enter your name.',
            },
            email: {
              required: 'Please enter a valid email address.',
              email: 'Please enter a valid email address.',
            },
            password: {
              required: 'Your password is invalid. Please try again.',
              minlength: 'Please enter at least 8 characters.',
            }
          }
        });
      }
    })()
  </script>
</body>

</html>